<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.example.org/control"
	xmlns:tns="http://www.example.org/control"
	elementFormDefault="qualified">
	<annotation>
		<documentation></documentation>
	</annotation>
	<complexType name="Screen">
		<annotation>
			<documentation>Bildschirm-Definition</documentation>
		</annotation>
		<sequence>
			<element name="Configuration" maxOccurs="1" minOccurs="0"
				type="tns:Configuration">
			</element>

			<choice maxOccurs="1" minOccurs="0">
				<element name="TouchPoint" type="tns:TouchPoint"
					maxOccurs="1" minOccurs="0">
					<annotation>
						<documentation>
							Bildschirmpunkt des Vorgänger-Bildschirms
							(previousId), der gedrückt werden muss, um
							auf den vorliegenden zu
							gelangen. Können
							auch mehrere sein (z.B. Main-Bildschirm
							Auswahl
							des Heizkreises). Ist der Screen
							Teil einer Sequenz darf dieser
							TouchPoint
							nicht definiert sein.
						</documentation>
					</annotation>
				</element>
				<element name="UserSelection" type="tns:UserSelection">
				</element>
				<sequence>
					<element name="SequenceUp" type="tns:TouchPoint"
						maxOccurs="1" minOccurs="1">
						<annotation>
							<documentation>
								Ist der Screen Teil einer Sequenz wird
								mit diesem
								Element der TouchPoint für
								das vorherige Element definiert.
							</documentation>
						</annotation>
					</element>
					<element name="SequenceDown" type="tns:TouchPoint"
						maxOccurs="1" minOccurs="1">
						<annotation>
							<documentation>
								Ist der Screen Teil einer Sequenz wird
								mit diesem
								Element der TouchPoint für
								das nachfolgende Element definiert.
							</documentation>
						</annotation>
					</element>
				</sequence>
			</choice>
			<element name="Identification"
				type="tns:ScreenIdentification" maxOccurs="unbounded" minOccurs="1"></element>
			<element name="IgnoreRectangle" type="tns:Rectangle"
				maxOccurs="unbounded" minOccurs="0">
				<annotation>
					<documentation>
						Zur Erkennung von Useraktivitäten, Änderungen
						innerhalb dieser Rechtecke werden nicht als
						Useraktivität
						registriert Dient der Untersuchung
						von Usereingriffen. Im
						Ruhezustand wird jede
						Minute untersucht, ob der Bildschirminhalt
						sich
						geändert hat. Da auf einigen Bildschirmen
						ständig sich ändernde
						Werte angezeigt werden
						(Uhrzeit, Istwerte oder Anlegenstatus)
						können
						bestimmte Teile des Bildschirms mit Hilfe der
						"IgnoreRectangle" beim Vergleich ausgeblendt
						werden. Achtung: Im
						rectangle-Element gibt es
						auch noch das "invertFunction"-Attribut,
						damit
						kann ein bestimmter Bereich doch wieder zum
						Vergleich
						herangezogen werden, auch wenn er
						durch die anderen
						Ingnorerectangles maskiert
						ist. Ist etwas unsauber gelöst.
					</documentation>
				</annotation>
			</element>
			<element name="PreparationRef" type="tns:PreparationRef"
				maxOccurs="1" minOccurs="0">
			</element>
			<element name="LastPreparationRef" type="tns:PreparationRef"
				maxOccurs="1" minOccurs="0">
				<annotation>
					<documentation>
						Sollte der Screeninhalt nicht eindeutig sein
						(nur bei
						Heizkreis-Solltemperaturen möglich),
						wird noch zusätzlich bei der
						Identifizierung die
						letzte Preparation (evtl. auch eines
						Vorgängerbildschirms zum Vergleich
						hinzugenommen.
					</documentation>
				</annotation>
			</element>
		</sequence>
		<attribute name="id" type="string" use="required"></attribute>
		<attribute name="previousId" type="string" use="required">
			<annotation>
				<documentation>Vorgänger-Bildschirm</documentation>
			</annotation>
		</attribute>
		<attribute name="backId" type="string" use="required">
			<annotation>
				<documentation>
					Bildschirm nach Druck auf die Back-Taste
				</documentation>
			</annotation>
		</attribute>
		<attribute name="ignoreChanges" type="boolean"
			use="optional">
			<annotation>
				<documentation>
					Zur Erkennung von Useraktivitäten, Änderungen auf
					diesem Screen werden nicht als Useraktivität
					registriert. Default:
					false
				</documentation>
			</annotation>
		</attribute>
		<attribute name="noRestore" type="boolean" use="optional"></attribute>
		<attribute name="mustSave" type="boolean" use="optional">
			<annotation>
				<documentation>
					Zur Analyse von unterschiedlichen
					Anlagenkonfigurationene kann man den
					Bildschirminhalt während des
					Learnings abspeichern
					lassen.
				</documentation>
			</annotation>
		</attribute>
	</complexType>


	<complexType name="ScreenGrafic">
		<annotation>
			<documentation>Daten des zu vergleichende Bildschirmbereich
			</documentation>
		</annotation>
		<sequence>
			<element name="Rectangle" type="tns:Rectangle" maxOccurs="1"
				minOccurs="0">
				<annotation>
					<documentation>Zu vergleichende Bildschirmbereich. Die
						Bereichangabe ist optional, wenn sie aus dem übergeorneten Element
						(z.B. Control-Element) geholt werden kann.
					</documentation>
				</annotation>
			</element>
		</sequence>
		<attribute name="id" type="string" use="required">
			<annotation>
				<documentation>Die id muss über alle ScreenGrafic-Elemente eindeutig
					sein. Sie dient auch als Verweis auf die Datei mit den Grafik-Daten
				</documentation>
			</annotation>
		</attribute>
		<attribute name="exact" type="boolean">
			<annotation>
				<documentation>true: Wenn auch Grauwerte verglichen werden sollen
					false: Schwarz-Weiß reicht aus
				</documentation>
			</annotation>
		</attribute>
	</complexType>

	<complexType name="ScreenOcr">
		<annotation>
			<documentation>
				Die zu erkennenden Zeichen, über die der angezeigte
				Bildschirm bestimmt werden kann
			</documentation>
		</annotation>
		<sequence>
			<element name="Rectangle" type="tns:Rectangle">
				<annotation>
					<documentation>
						Bereich des Bildschirms mit den zeichen
					</documentation>
				</annotation>
			</element>
			<element name="ScreenGraficRef" type="tns:ScreenGraficRef"
				maxOccurs="1" minOccurs="1">
			</element>
		</sequence>
		<attribute name="value" type="string" use="required">
			<annotation>
				<documentation>Soll-Zeichen-String</documentation>
			</annotation>
		</attribute>
		<attribute name="right" type="boolean" use="optional"></attribute>
	</complexType>

	<complexType name="Coordinate">
		<annotation>
			<documentation>Koordinaten eines Punktes auf dem Bildschirm.
				Referenzpunkt ist im Bildschirm oben links, die X-Koordinate läuft
				von links nach rechts, die Y-Koordinate von oben nach unten
			</documentation>
		</annotation>
		<attribute name="X" type="int" use="required"></attribute>
		<attribute name="Y" type="int" use="required"></attribute>
	</complexType>

	<complexType name="Rectangle">
		<annotation>
			<documentation>Definition eines Bereichs auf dem Bildschirm
			</documentation>
		</annotation>
		<sequence>
			<element name="TopLeft" type="tns:Coordinate" maxOccurs="1"
				minOccurs="1">
				<annotation>
					<documentation>Koordinate oben links</documentation>
				</annotation>
			</element>
			<element name="BottomRight" type="tns:Coordinate"
				maxOccurs="1" minOccurs="1">
				<annotation>
					<documentation>Koordinate unten rechts
					</documentation>
				</annotation>
			</element>
		</sequence>
		<attribute name="invertFunction" type="boolean"></attribute>
	</complexType>




	<complexType name="Screens">
		<annotation>
			<documentation>Alle Bildschirm-Definitionen</documentation>
		</annotation>
		<sequence>
			<choice maxOccurs="unbounded" minOccurs="0">
				<element name="Screen" type="tns:Screen">
				</element>
				<element name="ScreenSequence" type="tns:ScreenSequence"></element>
			</choice>
		</sequence>
		<attribute name="homeId" type="string"></attribute>
	</complexType>



	<complexType name="Control">
		<annotation>
			<documentation>
				Einstell-Parameter der Anlage (Tages-Temperatur,
				Raumeinfluss, Betriebsart)
			</documentation>
		</annotation>
		<sequence>
			<sequence>
				<element name="GuiAccess" type="tns:GuiAccess" maxOccurs="1"
					minOccurs="0">
				</element>
			</sequence>
			<choice>
				<element name="TypeReadWrite" type="tns:ReadWrite"
					maxOccurs="1" minOccurs="1">
					<annotation>
						<documentation>
							Definitionen, wenn
							derSolvis-Anlagenparameter ein
							einzustellender Wert (z. B.
							Tages-Temperatur, Raumeinfluss) ist
						</documentation>
					</annotation>
				</element>
				<element name="TypeRead" type="tns:Read" maxOccurs="1"
					minOccurs="1">
					<annotation>
						<documentation>
							Definitionen, wenn
							derSolvis-Anlagenparameter nur
							ein
							auszulesender Wert (z. B. Brennerstarts) ist
						</documentation>
					</annotation>
				</element>
				<element name="TypeMode" type="tns:Mode" maxOccurs="1"
					minOccurs="1">
					<annotation>
						<documentation>
							Definitionen, wenn Solvis-Anlagenparameter
							ein
							einzustellender Modus (z.B. Betriebsart)
							ist
						</documentation>
					</annotation>
				</element>
				<element name="TypeButton" type="tns:Button" maxOccurs="1"
					minOccurs="1">
					<annotation>
						<documentation>
							Der Kanal-Wert wird durch den Zustand eines
							Buttons
							bestimmt. Ist er selektiert (weiße
							Schrift auf dunklem
							Hintergrund)
						</documentation>
					</annotation>
				</element>
			</choice>

			<element name="UpdateBy" type="tns:UpdateBy" maxOccurs="1"
				minOccurs="0">
			</element>
		</sequence>

		<attribute name="optional" type="boolean" use="optional">
			<annotation>
				<documentation>Wenn das Feld nicht in allen Konfigurationen
					vorhanden ist, kann das nicht vorhandensein
					durch setzen von
					optional auf
					&amp;amp;quot;true&amp;amp;quot; werden. Das ist
					z.B.
					für C03.LaufzeitAnforderung2
					erforderlich, da diese bei modulierten
					Gasbrennern nicht vorhanden ist.
				</documentation>
			</annotation>
		</attribute>
	</complexType>

	<!-- >complexType name="Mode"> <annotation> <documentation>Definitionen 
		der Betriebsarten um die aktulle Betriebsart zu ermmitteln/einzustellen (z.B. 
		Tag/Nacht/Standby) </documentation> </annotation> <sequence> <element name="Mode" 
		type="tns:Mode" maxOccurs="unbounded" minOccurs="0"></element> </sequence> 
		</complexType -->


	<complexType name="ModeEntry">
		<annotation>
			<documentation>Definition um ein Status zu ermitteln/verändern
				(Betriebsstatus, z.B. Standby)
			</documentation>
		</annotation>
		<sequence>
			<element name="GuiSet" maxOccurs="1" minOccurs="0">
				<complexType>
					<sequence>
						<element name="Touch" type="tns:TouchPoint" maxOccurs="1"
							minOccurs="1">
							<annotation>
								<documentation>
									Zu drückender Punkt auf dem
									Bildschirm um den
									Modus zu wählen
								</documentation>
							</annotation>
						</element>
						<element name="ScreenGrafic" type="tns:ScreenGrafic"
							maxOccurs="1" minOccurs="1">
							<annotation>
								<documentation>
									Bildschirmgrafik, welche den Modus
									bestimmt. Hier
									müssen nicht die
									Koordinaten der Grafik eingegeben
									werden.
								</documentation>
							</annotation>
						</element>
					</sequence>
				</complexType>
			</element>

			<element name="MustBeWhite" type="tns:Rectangle"
				maxOccurs="unbounded" minOccurs="0"></element>
		</sequence>
		<attribute name="id" type="string" use="required">
			<annotation>
				<documentation>Modus-Name</documentation>
			</annotation>
		</attribute>
	</complexType>




	<complexType name="SolvisDescription">
		<annotation>
			<documentation>Root mit der Home-Screen-Definition</documentation>
		</annotation>
		<sequence>
			<element name="SolvisTypes">
				<complexType>
					<sequence>
						<element name="Type" type="tns:Type" maxOccurs="unbounded"
							minOccurs="1"></element>
					</sequence>
				</complexType>
			</element>
			<element name="Configurations" type="tns:Configurations"
				maxOccurs="1" minOccurs="0">
			</element>
			<element name="ScreenSaver" type="tns:ScreenSaver"
				maxOccurs="1" minOccurs="1">
			</element>
			<element name="ErrorDetection" type="tns:ErrorDetection"
				maxOccurs="1" minOccurs="1">
			</element>
			<element name="Service" type="tns:Service"></element>
			<element name="Screens" type="tns:Screens" maxOccurs="1"
				minOccurs="1">
			</element>
			<element name="ScreenGrafics" maxOccurs="1" minOccurs="1">
				<complexType>
					<sequence>
						<element name="ScreenGrafic" type="tns:ScreenGrafic"
							maxOccurs="unbounded" minOccurs="0">
						</element>
					</sequence>
				</complexType>
			</element>
			<element name="FallBack" type="tns:FallBack" maxOccurs="1"
				minOccurs="1">
			</element>
			<element name="ChannelDescriptions" maxOccurs="1"
				minOccurs="1">
				<complexType>
					<annotation>
						<documentation>Alle Definitionen der Solvis-Kanäle</documentation>
					</annotation>
					<sequence>
						<element name="ChannelDescription"
							type="tns:ChannelDescription" maxOccurs="unbounded" minOccurs="0">
						</element>
					</sequence>
				</complexType>
			</element>
			<element name="Preparations" maxOccurs="1" minOccurs="0">
				<complexType>
					<sequence>
						<element name="Preparation" type="tns:Preparation"
							maxOccurs="unbounded" minOccurs="0">
						</element>
					</sequence>
				</complexType>
			</element>
			<element name="Clock" type="tns:Clock" maxOccurs="1"
				minOccurs="1">
			</element>
			<element name="Durations" maxOccurs="unbounded" minOccurs="0">
				<complexType>
					<sequence>
						<element name="Duration" type="tns:Duration"
							maxOccurs="unbounded" minOccurs="0"></element>
					</sequence>
				</complexType>
			</element>
			<element name="Miscellaneous" type="tns:Miscellaneous"
				maxOccurs="1" minOccurs="1">
			</element>
		</sequence>
	</complexType>

	<element name="SolvisDescription" type="tns:SolvisDescription"></element>




	<complexType name="ScreenGraficRef">
		<annotation>
			<documentation>Referenz auf die Daten des zu vergleichende
				Bildschirmbereichs
			</documentation>
		</annotation>
		<attribute name="refId" type="string" use="required"></attribute>
	</complexType>


	<complexType name="Duration">
		<annotation>
			<documentation>Dauer allgemein, meist für Länge eines Druckes auf dem
				Bildschirm
			</documentation>
		</annotation>
		<attribute name="id" type="string" use="required"></attribute>
		<attribute name="time_ms" type="int" use="required"></attribute>
	</complexType>


	<complexType name="TouchPoint">
		<annotation>
			<documentation>Definitionen zum Berühren eines bestimmten Punktes auf
				dem Bildschirm (Koordinaten, Länge etc.)
			</documentation>
		</annotation>
		<sequence>
			<element name="Coordinate" type="tns:Coordinate"
				maxOccurs="1" minOccurs="1">
				<annotation>
					<documentation>Zu drückender Punkt auf dem Bildschirm
					</documentation>
				</annotation>
			</element>
		</sequence>
		<attribute name="pushTimeRefId" type="string" use="required">
			<annotation>
				<documentation>Referenz auf die Zeit, die der Button gedrückt wird
				</documentation>
			</annotation>
		</attribute>
		<attribute name="releaseTimeRefId" type="string"
			use="required">
			<annotation>
				<documentation>Referenz auf die Zeit, wie lange gewartet wird,
					nachdem der Button losgelassen wurde.
				</documentation>
			</annotation>
		</attribute>
	</complexType>



	<complexType name="ScreenSaver">
		<annotation>
			<documentation>
				Daten für die Screen-Saver-Erkennung
			</documentation>
		</annotation>
		<sequence>
			<element name="TimeDateRectangle" type="tns:Rectangle"
				maxOccurs="1" minOccurs="1">
			</element>
			<element name="MaxGraficSize" type="tns:Coordinate"
				maxOccurs="1" minOccurs="1"></element>
			<element name="ResetScreenSaver" type="tns:TouchPoint"
				maxOccurs="1" minOccurs="1">
			</element>
		</sequence>
		<attribute name="timeHeight" type="int" use="required"></attribute>
	</complexType>


	<complexType name="Measurement">
		<annotation>
			<documentation>
				Definition für das Auslesen eines Solvis-Datums aus dem
				Solvis-XML Hex-String. Auslesbar über
				http://192.168.1.40/sc2_val.xml.
			</documentation>
		</annotation>
		<sequence>
			<element name="Field" maxOccurs="unbounded" minOccurs="1"
				type="tns:Field">
			</element>
		</sequence>
		<attribute name="type" use="required">
			<annotation>
				<documentation>Art der Umwandlung</documentation>
			</annotation>
			<simpleType>
				<restriction base="string">
					<enumeration value="date"></enumeration>
					<enumeration value="unsigned"></enumeration>
					<enumeration value="signed"></enumeration>
					<enumeration value="boolean"></enumeration>
					<enumeration value="hex"></enumeration>
				</restriction>
			</simpleType>
		</attribute>
		<attribute name="divisor" type="int">
			<annotation>
				<documentation>
					Bei sihned und unsigned der Divisor
				</documentation>
			</annotation>
		</attribute>
		<attribute name="average" type="boolean">
			<annotation>
				<documentation>Mittelwertbildung</documentation>
			</annotation>
		</attribute>
		<attribute name="delayAfterSwitchingOn_ms" type="int"
			use="optional">
			<annotation>
				<documentation>
					Einige Sensoren der Solvis-Anlage benötigen nach dem
					Einschalten eine gewise Zeit, bis sie die richtigen
					Messwerte anzeigen. Mir dem Setzen dieses Wertes
					wird bewirkt, dass die Weitergabe der Messergebnisse
					dieses Sensors erst spätererfolgt.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="fast" type="boolean" use="optional"></attribute>
	</complexType>




	<complexType name="Calculation">
		<annotation>
			<documentation>
				Notwendigen Definitionen zur Berechnung für eine aus den
				Daten zu berechnender Wert
			</documentation>
		</annotation>
		<sequence>
			<element name="Alias" type="tns:Alias" maxOccurs="unbounded"
				minOccurs="0">
				<annotation>
					<documentation>
						Abhängigkeiten von Solvis-Messungen (Brenner
						an/aus etc.)
					</documentation>
				</annotation>
			</element>
		</sequence>

		<attribute name="strategy" use="required">
			<simpleType>
				<annotation>
					<documentation>
						Berechnungsart des zu berechnendesn Wertes
					</documentation>
				</annotation>
				<restriction base="string">
					<enumeration value="runtime"></enumeration>
					<enumeration value="starts"></enumeration>
					<enumeration value="burnerStatus"></enumeration>
					<enumeration value="mixerPosition0"></enumeration>
				</restriction>
			</simpleType>
		</attribute>
		<attribute name="correction" type="boolean" use="optional">
			<annotation>
				<documentation>Korrigiert die Laufzeit automatisisiert.</documentation>
			</annotation></attribute>
	</complexType>




	<complexType name="ChannelDescription">
		<annotation>
			<documentation>
				Definitionen eines darzustellenden Solvis-Datums (z.B.
				A09.Mischer.HK1)
			</documentation>
		</annotation>
		<sequence>
			<element name="Configuration" maxOccurs="1" minOccurs="0"
				type="tns:Configuration">
			</element>


			<sequence maxOccurs="1" minOccurs="1">
				<choice maxOccurs="1" minOccurs="1">
					<element name="Calculation" type="tns:Calculation"
						maxOccurs="1" minOccurs="1">
					</element>
					<element name="Measurement" type="tns:Measurement"
						maxOccurs="1" minOccurs="1">
					</element>
					<element name="Control" type="tns:Control" maxOccurs="1"
						minOccurs="1">
					</element>
				</choice>
			</sequence>
		</sequence>

		<attribute name="id" type="string" use="required"></attribute>
		<attribute name="buffered" type="boolean" use="optional">
			<annotation>
				<documentation>Ist dieses Flag gesetzt, so erfolgt das Senden der
					Daten im Block mit anderen Daten nicht als Einzelevent.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="unit" type="string" use="optional"></attribute>
		<attribute name="glitchInhibitTime_ms" type="int"
			use="optional"></attribute>
	</complexType>




	<complexType name="Alias">
		<annotation>
			<documentation>Abhängigkeit zu einem Solvis-Datums von andern
			</documentation>
		</annotation>
		<attribute name="id" type="string" use="required"></attribute>
		<attribute name="dataId" type="string" use="required"></attribute>
	</complexType>



	<complexType name="Field">
		<annotation>
			<documentation>Bereichs-Definition eines Sovis-Datum in dem
				Solvis-XML Hex-String.
				Auslesbar über
				http://192.168.1.40/sc2_val.xml.
			</documentation>
		</annotation>
		<sequence></sequence>
		<attribute name="position" type="int" use="required"></attribute>
		<attribute name="length" type="int" use="required"></attribute>
	</complexType>



	<complexType name="EquipmentOnOff">
		<annotation>
			<documentation>
				Defintionen zum Abgleich der berechneten Brennerdaten
				mit den Solvis-Daten (z.B. Laufzeiten, Brennerstarts)
			</documentation>
		</annotation>

		<sequence>
			<element name="Trigger" type="tns:Trigger"
				maxOccurs="unbounded" minOccurs="0">
				<annotation>
					<documentation>
						Wenn erkannt wurdedass die "calculatedId"
						synchronisiert werden muss, können noch weitere
						Ids neu synchronisiert werden. Die triggerIds
						sind dan die caculteIds, welche neu
						synchronisiert werden müssen.
					</documentation>
				</annotation>
			</element>
		</sequence>
		<attribute name="equipmentId" type="string" use="required">
			<annotation>
				<documentation>
					Brenner-Name der Solvis-XML-Definitionen A12.Brenner
					oder A13.Brenner_S2)
				</documentation>
			</annotation>
		</attribute>


		<attribute name="calculatedId" type="string" use="required">
			<annotation>
				<documentation>
					berechnente Brennerstufen-Laufzeit, die zur
					Ermittelung des Stundenwechsels (hourly) hergenommen
					wird
				</documentation>
			</annotation>
		</attribute>


		<attribute name="factor" type="int">
			<annotation>
				<documentation>
					Faktor, um aus der Brennerlaufzeit aus dem GUI auf
					die berechnete Laufzeit zu kommen, normalerweise
					3600. Dies wird zur Syynchronisation nach 1h
					Brennerlaufzeit benötigt. Ist der faktor -1, handelt
					es sich um den Update der Brennerstarts.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="checkIntervalId" type="string"
			use="optional">
			<annotation>
				<documentation>
					Zeit-Intervall, nach dem der berechnete Wert mit dem
					echten Solvis-Wert verglichen wird und evtl.
					synchronisiert wird. Zu beachten: Diese
					Synchronisationsart ist nur einen Stichprobe und
					kann so nur Abweichungen von mehr als 1h erkennen.
					Genauerer Synchronisation erhält man über hourly.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="readIntervalId" type="string" use="optional">
			<annotation>
				<documentation>
					Zeit-Intervall, nach deren Ablauf immer die
					Brennerlaufzeit aus dem GUI ermittelt wird, wenn die
					Synchronisation gestartet ist.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="hourly" type="boolean">
			<annotation>
				<documentation>
					Wenn der Wert nach jeder Stund der Brennerlaufzeit
					kontrolliert werden soll. Dazu wird der berechnete
					Wert (z.B. X2.BrennerLaufzeit_s) genutzt. Kurz bevor
					der Brenner 1 h gelaufen ist, wird die Überprüfung
					aktiviert und so der Stellenwechsel genau detektiert
					wird. Die Überwachung wird dann mit dem Erkennen des
					Zeitwechsels wieder bis zur nächsten Stunde
					deaktiviert.
				</documentation>
			</annotation>
		</attribute>

	</complexType>

	<complexType name="HumanAccess">
		<annotation>
			<documentation>Definiert die Abhängigkeit der Definition von einer
				Bildschirmänderung.
				Greift der User an der Solvis-Console ein, wird
				dieser Wert neu ermittelt,
				da der user diesen manuell verändert haben
				könnte.
			</documentation>
		</annotation>
	</complexType>


	<complexType name="Mode">
		<sequence>
			<element name="ModeEntry" type="tns:ModeEntry"
				maxOccurs="unbounded" minOccurs="1"></element>
		</sequence>
	</complexType>

	<complexType name="Miscellaneous">
		<annotation>
			<documentation>Verschiedenes</documentation>
		</annotation>
		<attribute name="powerOffDetectedAfterIoErrors" type="int"
			use="required">
			<annotation>
				<documentation>
					Anzahl der IO-Fehler, nachdem ein Power-Off der
					Solvis-Anlage erkannt wurde. Zusätzlich muss die
					"powerOffDetectedAfterTimeout_ms"-Zeit abgelaufen
					ist
				</documentation>
			</annotation>
		</attribute>
		<attribute name="powerOffDetectedAfterTimeout_ms" type="int"
			use="required">
			<annotation>
				<documentation>
					Zeit ohne Reaktion der Solvis-Anlage, bis ein
					Power-Off erkannt wird. Zusätzlich müssen noch
					"powerOffDetectedAfterIoErrors" erfüllt sein
				</documentation>
			</annotation>
		</attribute>
		<attribute name="measurementsBackupTime_ms" type="int"
			use="required">
		</attribute>
		<attribute name="unsuccessfullWaitTime_ms" type="int"
			use="required">
			<annotation>
				<documentation>
					Wiederholzeit nach fehlgeschlagenem Befehl
				</documentation>
			</annotation>
		</attribute>
		<attribute name="connectionHoldTime_ms" type="int"
			use="required">
			<annotation>
				<documentation>
					Wird eine Verbindung zum Client unterbrochen, kann
					innerhalb dieser Zeit eine Verbindung
					wiederhergestellt werden, ohne
					dass clienbezogene
					Einstellungen im Server verloren gehen
				</documentation>
			</annotation>
		</attribute>
		<attribute name="solvisConnectionTimeout_ms" type="int"
			use="required">
		</attribute>
		<attribute name="solvisReadTimeout_ms" type="int"
			use="required">
		</attribute>
		<attribute name="clientTimeoutTime_ms" type="int"
			use="required"></attribute>
	</complexType>

	<complexType name="UpdateBy">
		<annotation>
			<documentation>Faktor, um von der Brennerlaufzeit aus dem GUI auf die
				berechnete Laufzeit zu kommen, normalerweise 3600.
			</documentation>
		</annotation>
		<sequence>
			<element name="EquipmentOnOff" type="tns:EquipmentOnOff"
				maxOccurs="1" minOccurs="0">
			</element>
			<element name="HumanAccess" type="tns:HumanAccess"
				maxOccurs="1" minOccurs="0"></element>
			<element name="SolvisHeatingData"
				type="tns:SolvisHeatingData" maxOccurs="1" minOccurs="0">
			</element>
		</sequence>
	</complexType>

	<complexType name="SolvisHeatingData">
		<attribute name="solvisDataId" type="string" use="required"></attribute>
		<attribute name="factor" type="int"></attribute>
	</complexType>



	<complexType name="FallBack">
		<complexContent>
			<extension base="tns:FallBackBase">
				<sequence>
					<element name="LastChance" type="tns:FallBackBase"
						maxOccurs="1" minOccurs="0">
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="FallBackBase">
		<sequence>
			<choice maxOccurs="unbounded" minOccurs="0">
				<element name="Back" type="tns:Back"></element>
				<element name="ScreenRef" type="tns:ScreenRef"></element>
			</choice>
		</sequence>
	</complexType>

	<complexType name="Back"></complexType>

	<complexType name="ScreenRef">
		<attribute name="id" type="string" use="required"></attribute>
	</complexType>

	<complexType name="Preparation">
		<sequence>
			<element name="TouchPoint" type="tns:TouchPoint"
				maxOccurs="1" minOccurs="1">
			</element>
			<element name="ScreenGrafic" type="tns:ScreenGrafic"
				maxOccurs="1" minOccurs="1">
			</element>
		</sequence>
		<attribute name="id" type="string" use="required"></attribute>
	</complexType>


	<complexType name="HeaterLoops">
		<annotation>
			<documentation>Zur Ermittelung der Heizkreise</documentation>
		</annotation>
		<sequence>
			<element name="HK1Button" type="tns:Rectangle" maxOccurs="1"
				minOccurs="1">
			</element>
			<element name="HK2Button" type="tns:Rectangle" maxOccurs="1"
				minOccurs="1"></element>
			<element name="HK3Button" type="tns:Rectangle" maxOccurs="1"
				minOccurs="1"></element>
		</sequence>
		<attribute name="screenRef" type="string" use="required"></attribute>
	</complexType>

	<complexType name="Configurations">
		<annotation>
			<documentation>Beschreibungen um die Anlagenkonfiguration zu
				ermitteln
			</documentation>
		</annotation>
		<sequence>
			<element name="HeaterLoops" type="tns:HeaterLoops"
				maxOccurs="1" minOccurs="1">
				<annotation>
					<documentation>
						Konfiguration der Heizkreise
					</documentation>
				</annotation>
			</element>
			<element name="Solar" type="tns:Solar" maxOccurs="1"
				minOccurs="1">
			</element>
		</sequence>
	</complexType>

	<complexType name="ConfigurationMask">
		<attribute name="andMask" type="tns:UnNBytesHexInt"
			use="required"></attribute>
		<attribute name="compareMask" type="tns:UnNBytesHexInt"
			use="required"></attribute>
	</complexType>


	<complexType name="PreparationRef">
		<attribute name="refId" type="string" use="required"></attribute>
	</complexType>

	<complexType name="Clock">
		<annotation>
			<documentation>Parameter zum Stellen der Uhr</documentation>
		</annotation>
		<sequence>
			<element name="Year" type="tns:DatePart" maxOccurs="1"
				minOccurs="1">
			</element>
			<element name="Month" type="tns:DatePart" maxOccurs="1"
				minOccurs="1">
			</element>
			<element name="Day" type="tns:DatePart" maxOccurs="1"
				minOccurs="1">
			</element>
			<element name="Hour" type="tns:DatePart" maxOccurs="1"
				minOccurs="1">
			</element>
			<element name="Minute" type="tns:DatePart" maxOccurs="1"
				minOccurs="1">
			</element>
			<element name="Upper" type="tns:TouchPoint" maxOccurs="1"
				minOccurs="1">
			</element>
			<element name="Lower" type="tns:TouchPoint" maxOccurs="1"
				minOccurs="1">
			</element>
			<element name="Ok" type="tns:TouchPoint" maxOccurs="1"
				minOccurs="1">
			</element>
			<element name="DisableClockSetting"
				type="tns:DisableClockSetting" maxOccurs="1" minOccurs="1">
			</element>
		</sequence>
		<attribute name="timeChannelId" type="string" use="required">
			<annotation>
				<documentation>Id des Channels, der die aktuelle Zeit der Solvis-Uhr
					wiedergibt.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="screenId" type="string" use="required">
			<annotation>
				<documentation>Id des Screen, wo das Setzen der Zeit erfolgt.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="okScreenId" type="string" use="required">
			<annotation>
				<documentation>Id des Screens, der nach den Druck des OK-Buttons
					erscheinen soll (dient der Verifikation)
				</documentation>
			</annotation>
		</attribute>
	</complexType>

	<complexType name="DatePart">
		<annotation>
			<documentation>Beschreibung des jeweiligen Datums/Zeit-Anteils
			</documentation>
		</annotation>
		<sequence>
			<element name="Rectangle" type="tns:Rectangle" maxOccurs="1"
				minOccurs="1">
			</element>
			<element name="Touch" type="tns:TouchPoint"></element>
			<element name="ScreenGrafic" type="tns:ScreenGrafic"
				maxOccurs="1" minOccurs="1">
			</element>
		</sequence>
		<attribute name="least" type="int" use="optional"></attribute>
	</complexType>

	<complexType name="Solar">
		<annotation>
			<documentation>Zur Ermittlung des Solarkreises</documentation>
		</annotation>
		<sequence>
			<element name="ReturnTemperature" type="tns:Rectangle"
				maxOccurs="1" minOccurs="1"></element>
			<element name="OutgoingTemperature" type="tns:Rectangle"
				maxOccurs="1" minOccurs="1"></element>
		</sequence>
		<attribute name="screenRef" type="string" use="required"></attribute>
		<attribute name="format" type="string" use="required"></attribute>
		<attribute name="maxTemperatureX10" type="int"
			use="required"></attribute>
	</complexType>

	<complexType name="Type">
		<attribute name="id" use="required">
			<annotation>
				<documentation>Identifikation des Anlagentypes, aktuell nur
					SolvisMax/SolvisBen
				</documentation>
			</annotation>
			<simpleType>
				<restriction base="string">
					<enumeration value="SolvisMax"></enumeration>
					<enumeration value="SolvisMax6"></enumeration>
					<enumeration value="SolvisMax7"></enumeration>
					<enumeration value="SolvisBen"></enumeration>
				</restriction>
			</simpleType>
		</attribute>
		<attribute name="configuration" type="tns:UnNBytesHexInt"
			use="required">
			<annotation>
				<documentation>In der Configuration sind die wesentlichen
					Besonderheiten der Anlage erfasst.
					Folgende Bits sind aktuell
					definiert (Bit 0 ist LSB) und ein gesetztes Bit
					bedeutet::

					Bit 0:
					Heizkreis 1 vorhanden
					Bit 1: Heizkreis 2 vorhanden
					Bit 2: Heizkreis 3
					vorhanden (wird aktuell ignoriert)
					Bit 3: Solar-Kreislauf vorhanden

					Bit 24: SolvisMax
					Bit 25: SolvisBen
				</documentation>
			</annotation>
		</attribute>
	</complexType>

	<simpleType name="UnNBytesHexInt">
		<union memberTypes="unsignedInt">
			<simpleType>
				<restriction base="token">
					<pattern value="0x([0-9A-Fa-f]{2})+" />
				</restriction>
			</simpleType>
		</union>
	</simpleType>

	<complexType name="ErrorDetection">
		<annotation>
			<documentation>Beschreibung zur Fehlererkennung. Die Border-Werte
				sind Promille-Werte bezogen auf die Abmessungen des Bildschirmes.
			</documentation>
		</annotation>
		<sequence>
			<element name="LeftBorder" type="tns:Range" maxOccurs="1"
				minOccurs="1">
				<annotation>
					<documentation>Suchbereich für den linken Rahmen
					</documentation>
				</annotation>
			</element>
			<element name="RightBorder" type="tns:Range" maxOccurs="1"
				minOccurs="1">
				<annotation>
					<documentation>Suchbereich für den rechten Rahmen</documentation>
				</annotation>
			</element>
			<element name="TopBorder" type="tns:Range" maxOccurs="1"
				minOccurs="1">
				<annotation>
					<documentation>Suchbereich für den oberen Rahmen
					</documentation>
				</annotation>
			</element>
			<element name="MiddleBorder" type="tns:Range" maxOccurs="1"
				minOccurs="1">
				<annotation>
					<documentation>Suchbereich für die Unterteilung zwischen
						Überschrift und Fehlertext
					</documentation>
				</annotation>
			</element>
			<element name="BottomBorder" type="tns:Range" maxOccurs="1"
				minOccurs="1">
				<annotation>
					<documentation>Suchbereich für den unteren Rahmen</documentation>
				</annotation>
			</element>
			<element name="HhMm" type="tns:Rectangle" maxOccurs="1"
				minOccurs="1">
				<annotation>
					<documentation>
						Koordinaten der Zeitanzeige des
						Home-Bildschirms.
						Hier ist im Fehlerfall
						anstelle der Zeit ein runder Button mit
						einem
						blinkenden Warnzeichen eingeblendet. Daher
						liefert der Server
						einen Error-Event, wenn nicht
						mehr die Uhranzeige eingeblendet ist.
					</documentation>
				</annotation>
			</element>
			<element name="DdMmYy" type="tns:Rectangle" maxOccurs="1"
				minOccurs="1">
				<annotation>
					<documentation>
						Koordinaten der Datumsanzeige des
						Home-Bildschirms.
						Hier ist im Fehlerfall
						anstelle der Zeit ein runder Button mit
						einem
						blinkenden Warnzeichen eingeblendet. Daher
						liefert der Server
						einen Error-Event, wenn nicht
						mehr die Uhranzeige eingeblendet ist.
					</documentation>
				</annotation>
			</element>
			<element name="ErrorCondition" type="tns:ErrorCondition"
				maxOccurs="unbounded" minOccurs="0"></element>
		</sequence>
	</complexType>

	<complexType name="Range">
		<annotation>
			<documentation>Die Bereichsgrenzen in Prozent</documentation>
		</annotation>
		<attribute name="lowerLimit" type="int" use="required">
			<annotation>
				<documentation>Relativ in Promille</documentation>
			</annotation>
		</attribute>
		<attribute name="higherLimit" type="int" use="required">
			<annotation>
				<documentation>Relativ in Promille</documentation>
			</annotation>
		</attribute>
	</complexType>

	<complexType name="DisableClockSetting">
		<attribute name="burnerId" type="string" use="required"></attribute>
		<attribute name="hotWaterPumpId" type="string"
			use="optional"></attribute>
	</complexType>

	<complexType name="Service">
		<sequence>
			<element name="ServiceScreen" type="tns:ScreenRef"
				maxOccurs="unbounded" minOccurs="0"></element>
		</sequence>
	</complexType>

	<complexType name="ErrorCondition">
		<attribute name="channelId" type="string" use="required"></attribute>
		<attribute name="value" type="boolean" use="required"></attribute>
	</complexType>


	<complexType name="Read">
		<sequence>
			<element name="GuiRead" type="tns:GuiRead" maxOccurs="1"
				minOccurs="0"></element>
		</sequence>
		<attribute name="divisor" type="int" use="optional">
			<annotation>
				<documentation>
					Divisor des Wertes (normalerweise 1)
				</documentation>
			</annotation>
		</attribute>
	</complexType>
	<complexType name="ReadWrite">
		<annotation>
			<documentation>
				Defintionen zur Modifikation eines Wertes über das
				Solvis-Gui (Berührungspunkte für
				Aufwärts-/Abwärtszählen, Increments
				etc.)
			</documentation>
		</annotation>
		<sequence>
			<element name="GuiModification" type="tns:GuiModification"
				maxOccurs="1" minOccurs="1">
			</element>
		</sequence>
		<attribute name="optional" type="boolean">
			<annotation>
				<documentation>
					Wenn das Feld nicht in allen Konfigurationen
					vorhanden ist, kann das nicht vorhandensein durch
					setzen von
					optional auf &amp;quot;true&amp;quot;
					werden. Das ist z.B. für
					C03.LaufzeitAnforderung2
					erforderlich, da diese bei modulierten
					Gasbrennern
					nicht vorhanden ist.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="divisor" type="int">
			<annotation>
				<documentation>
					Divisor des Wertes (normalerweise 1)
				</documentation>
			</annotation>
		</attribute>
		<attribute name="increment" type="int" use="required">
			<annotation>
				<documentation>
					Wert um den der Parameter bei einem Bildschirmdruck
					erhöht/erniedigt wird
				</documentation>
			</annotation>
		</attribute>
		<attribute name="least" type="int" use="required">
			<annotation>
				<documentation>
					kleinster Wert des Parameters
				</documentation>
			</annotation>
		</attribute>
		<attribute name="most" type="int" use="required">
			<annotation>
				<documentation>
					größter Wert des Parameters
				</documentation>
			</annotation>
		</attribute>
		<attribute name="incrementChange" type="int"></attribute>
		<attribute name="changedIncrement" type="int"></attribute>
		<attribute name="maxExceeding" type="int" use="optional">
			<annotation>
				<documentation>
					Maximal tollerierte kurzeitige Überschreitung der
					aktuellen oder der
					Solltemperatur.
					Viele der Solvis-Einstellungen
					ermöglichen einen
					wrap around. Nutzt man
					ihn bei
					den Einstellungen,
					so besteht die
					Gefahr, dass kurzzeitig zu hohe Temperaturen eingestellt werden.
					Beispiel: Heißwassertemperatur:
					Ein Wrap-Around würde erst bei
					65°C
					eintreten. Würde man ihn
					bedingungslos nutzen, könnten
					Verbrühungen
					die Folge sein.
				</documentation>
			</annotation>
		</attribute>
	</complexType>


	<complexType name="GuiAccess">
		<sequence>
			<element name="CurrentValue" type="tns:Rectangle"
				maxOccurs="1" minOccurs="1">
				<annotation>
					<documentation>
						Feld-Koordinaten mit aktuellem Wert
					</documentation>
				</annotation>
			</element>
			<element name="PreparationRef" type="tns:PreparationRef"
				maxOccurs="1" minOccurs="0">
				<annotation>
					<documentation>
						Referenz auf die spezielle GUI-Vorbereitung,
						z.b.
						Auswahl des Heizkreises
					</documentation>
				</annotation>
			</element>
			<element name="Dependency" type="tns:Dependency"
				maxOccurs="unbounded" minOccurs="0">
			</element>
		</sequence>
		<attribute name="screenId" type="string" use="required">
			<annotation>
				<documentation>
					Name des Bildschirms, über das der Anlagenparameter
					ausgelesen/eingestellt werden kann
				</documentation>
			</annotation>
		</attribute>
	</complexType>


	<complexType name="GuiRead">
		<attribute name="format" type="string" use="required">
			<annotation>
				<documentation> Der Format-String dient zur Extraktion der Daten aus
					einem String.

					Es handlet sich dabei um einen regulären Ausdruck.

					Die
					Gruppen des Suchausdrucks werden einfach hintereinandergehängt und
					als Daten verwendet.

					Enthält der reguläre Ausdruck jedoch die
					Gruppen "integerPlaces" oder
					"decimalPlaces" so handelt es sich bei
					dem Wert um
					eine zu interpretierende Fließkommazahl. Inm diesem fall
					werden dann
					nur nach den Gruppen "sign", "integerPlaces" und
					"decimalPlaces"
					gesucht.
					Das ergebnis wird dann wie folgt
					zusammengestellt:
					${sign}${integerPlaces}.${decimalPlaces}.

				</documentation>
			</annotation>
		</attribute>
	</complexType>

	<complexType name="GuiModification">
		<sequence>
			<element name="Upper" type="tns:TouchPoint" maxOccurs="1"
				minOccurs="1">
				<annotation>
					<documentation>
						Berührungspunkt-Definition um den Wert zu
						erhöhen
					</documentation>
				</annotation>
			</element>
			<element name="Lower" type="tns:TouchPoint" maxOccurs="1"
				minOccurs="1">
				<annotation>
					<documentation>
						Berührungspunkt-Definition um den Wert zu
						erniedrigen
					</documentation>
				</annotation>
			</element>
		</sequence>
		<attribute name="format" type="string" use="required">
			<annotation>
				<documentation>
					Der Format-String dient zur Extraktion der Daten aus
					einem String.

					Es handlet sich dabei um einen regulären Ausdruck.

					Die
					Gruppen des Suchausdrucks werden einfach hintereinandergehängt und
					als Daten verwendet.

					Enthält der reguläre Ausdruck jedoch die
					Gruppen "integerPlaces" oder
					"decimalPlaces" so handelt es sich bei
					dem Wert um
					eine zu interpretierende Fließkommazahl. Inm diesem fall
					werden dann
					nur nach den Gruppen "sign", "integerPlaces" und
					"decimalPlaces"
					gesucht.
					Das ergebnis wird dann wie folgt
					zusammengestellt:
					${sign}${integerPlaces}.${decimalPlaces}.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="wrapAround" type="boolean" use="optional"></attribute>
	</complexType>



	<complexType name="Button">
		<attribute name="invert" type="boolean" use="optional"></attribute>
		<attribute name="pushTimeId" type="string" use="required"></attribute>
		<attribute name="releaseTimeId" type="string" use="required"></attribute>
	</complexType>

	<complexType name="ScreenSequence">
		<annotation>
			<documentation>Definiert eine Sequenz von Screens, welche vom
				Vorgängerscreen nicht eindeutig ausgewählt werden können (z.B.
				Anlagenstatus). Der vom Vorgängerscreen ausgewählte Screen ist ein
				beliebiger dieser Sequenz.
				Es handelt sich dabei um einen Art
				virtuellerScreen, der einen
				Vorgänger besitzt.
			</documentation>
		</annotation>
		<sequence>
			<element name="ConfigurationMasks" type="tns:Configuration"
				maxOccurs="1" minOccurs="0">
				<annotation>
					<documentation>Konfigurations-Maske</documentation>
				</annotation>
			</element>
			<element name="TouchPoint" type="tns:TouchPoint"
				maxOccurs="1" minOccurs="1">
				<annotation>
					<documentation>TouchPoint um auf den virtuellen Screen zu kommen
					</documentation>
				</annotation>
			</element>
			<element name="PreparationRef" type="tns:PreparationRef"
				maxOccurs="1" minOccurs="0">
			</element>
			<element name="ScreenRef" type="tns:ScreenRef"
				maxOccurs="unbounded" minOccurs="0">
			</element>
		</sequence>
		<attribute name="id" type="string" use="required">
			<annotation>
				<documentation>Id des virtuellen Screens der Sequenz</documentation>
			</annotation>
		</attribute>
		<attribute name="previousId" type="string" use="required">
			<annotation>
				<documentation>Vorherige Id des Screens</documentation>
			</annotation>
		</attribute>
		<attribute name="wrapArround" type="boolean" use="optional">
			<annotation>
				<documentation>True, wenn die Sequenz bei SequenceUp nach dem
					letzten Element zum ersten geht
				</documentation>
			</annotation>
		</attribute>
	</complexType>
	<complexType name="Configuration">
		<sequence>
			<element minOccurs="0" maxOccurs="unbounded"
				name="ConfigurationMask" type="tns:ConfigurationMask">
			</element>
			<element name="Feature" type="tns:Feature"
				maxOccurs="unbounded" minOccurs="0">
				<annotation>
					<documentation>Die Konfiguration kann nur valide sein, wenn das
						Feature den identischen Wert wie im base.xml besitzt.
					</documentation>
				</annotation>
			</element>
		</sequence>
		<attribute name="admin" type="boolean" use="optional"></attribute>
		<attribute name="feature" type="string" use="optional">
			<annotation>
				<documentation>Enable-Feature. Wenn das </documentation>
			</annotation>
		</attribute>
	</complexType>


	<complexType name="UserSelection">
		<sequence>
			<element name="Digit" type="tns:Digit" maxOccurs="4"
				minOccurs="4">
			</element>
		</sequence>
		<attribute name="waitTimeAfterLastDigitRefId" type="string"></attribute>
	</complexType>

	<complexType name="Digit">
		<sequence>
			<element name="Rectangle" type="tns:Rectangle" maxOccurs="1"
				minOccurs="1"></element>
			<element name="Upper" type="tns:TouchPoint" maxOccurs="1"
				minOccurs="1"></element>
			<element name="Lower" type="tns:TouchPoint" maxOccurs="1"
				minOccurs="1"></element>
		</sequence>
		<attribute name="digit" use="required">
			<simpleType>
				<restriction base="int">
					<minInclusive value="0"></minInclusive>
					<maxInclusive value="9"></maxInclusive>
				</restriction>
			</simpleType>
		</attribute>
	</complexType>


	<complexType name="Dependency">
		<annotation>
			<documentation>
				Es gibt in den Solvis-Menüs Einstellungen, welche erst
				zu erreichen sind, wenn bestimmte Voreinstellungen
				durchgeführt wurden. Beispiel ist das Menü 2 der
				Heizkreise. Dort kann man die fixen
				Vorlauftemperaturwerte nur errichen, wenn man
				BetriebsartVT_HK1 auf Fix stellt.

				Mit der Dependency-Definition wird festgelegt, unter
				welchen Besdingungen der Control-Wert erreichbar ist.

				Auch kann man mit der Dependenvcy festlegen, dass z.b.
				der Heizkreis in den Standby gehen soll, ehe ein
				bestimmter Parameter modifiziert/ausgelesen wird.

				Wird kein Dependency-Value definiert, so wird vor dem
				Lesen/Schreiben des Kanals der Dependency-Wert ermittelt
				und nach Ende der Funktion wieder auf den vorherigen
				Wert zurück gestellt. Dies ist bei der Ermittlung der
				Soll-Temperaturen Tag/Nacht der Heizkreise notwendig, da
				es sich gezeigt hat, dass der lange Druck auf den
				Tag/Nacht-Button manchmal dazu führt, dass der
				Anlagenmodus des Heizkreises verändert wird.
			</documentation>
		</annotation>
		<attribute name="id" type="string" use="required"></attribute>
		<attribute name="value" type="string" use="optional"></attribute>
		<attribute name="priority" type="positiveInteger">
			<annotation>
				<documentation>Sind mehrere Dependencies definiert, gibt "priority" die Priorität an. Ein niedriger Wert hat Vorrang vor einem höheren.</documentation>
			</annotation></attribute>
	</complexType>
	<complexType name="Feature">
		<annotation>
			<documentation>Allgemeines Feature. Wirkt z.B. auf die Configuration
				im control.xml-File. Damit kann man bestimmte Scrrens/Channels
				abhängig vom Feature behandeln.
			</documentation>
		</annotation>
		<attribute name="id" type="string" use="required"></attribute>
		<attribute name="value" type="boolean" use="required"></attribute>
	</complexType>

	<complexType name="ScreenIdentification">
		<sequence>
			<choice maxOccurs="unbounded" minOccurs="1">
				<element name="Grafic" type="tns:ScreenGrafic" maxOccurs="1"
					minOccurs="1"></element>
				<element name="Ocr" type="tns:ScreenOcr" maxOccurs="1"
					minOccurs="1"></element>
				<element name="GraficRef" type="tns:ScreenGraficRef"
					maxOccurs="1" minOccurs="1"></element>
			</choice>
			<element name="MustBeWhite" type="tns:Rectangle"
				maxOccurs="unbounded" minOccurs="0"></element>
		</sequence>
	</complexType>

	<complexType name="Trigger">
		<attribute name="id" type="string" use="required"></attribute>
	</complexType>
</schema>