<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file. Any modifications will be overwritten. 
	To include a user specific buildfile here, simply create one in the same 
	directory with the processing instruction <?eclipse.ant.import?> as the first 
	entry and export the buildfile again. -->
<project basedir="." default="Build for me" name="SolvisMax">
	<property environment="env" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
	<property name="bin.dir" value="bin" />
	<property name="dist.dir" value="dist" />
	<property name="pub.dir" value="publish" />
	<property name="pdf" value="docu/SolvisSmartHomeServer.pdf" />
	<property name="changes" value="docu/CHANGES.txt" />
	<property name="fhem.pm"
		value="SmartHome/FHEM/73_SolvisClient.pm" />
	<property name="makefile" value="SmartHome/Linux/Makefile" />
	<property name="linux.systemd"
		value="SmartHome/Linux/SolvisSmartHomeServer.service" />
	<property name="linux.systemdD"
		value="SmartHome/Linux/DebugSolvisSmartHomeServer.service" />
	<property name="pubBaseDir"
		value="${bin.dir}/de/sgollmer/solvismax/data" />
	<property name="myBase.xml"
		value="${env.EIGENE_DATEIEN}/Programmierung/Extensions/base.xml" />
	<property name="lib.dir" value="lib" />
	<property name="dist.base" value="SolvisSmartHomeServer" />
	<path id="SolvisMax.classpath">
		<pathelement location="bin" />
		<pathelement location="lib/jlibmodbus-1.2.9.7.jar" />
		<pathelement location="lib/log4j-1.2-api-2.13.2.jar" />
		<pathelement location="lib/log4j-api-2.13.2.jar" />
		<pathelement location="lib/log4j-core-2.13.2.jar" />
		<pathelement location="lib/tinylog-api-2.1.2.jar" />
		<pathelement location="lib/tinylog-impl-2.1.2.jar" />
		<pathelement location="lib/mailapi-1.6.2.jar" />
		<pathelement location="lib/smtp-1.6.2.jar" />
		<pathelement location="lib/javax.activation-1.2.0.jar" />
	</path>
	<target name="init">
		<mkdir dir="${bin.dir}" />
		<copy includeemptydirs="false" todir="${bin.dir}">
			<fileset dir="src">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="${bin.dir}">
			<fileset dir="rsc">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="${bin.dir}" />
	</target>
	<target depends="clean" name="cleanall">
		<delete dir="${dist.dir}" />
		<delete dir="${pub.dir}" />
	</target>
	<target depends="build-subprojects,build-project" name="build" />
	<target name="build-subprojects" />
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" encoding="Cp1252"
			destdir="${bin.dir}" includeantruntime="false" source="${source}"
			target="${target}">
			<src path="src" />
			<src path="rsc" />
			<classpath refid="SolvisMax.classpath" />
		</javac>
	</target>
	<target
		description="Build all projects which reference this project. Useful to propagate changes."
		name="build-refprojects" />
	<target name="ErrorScreen">
		<java
			classname="de.sgollmer.solvismax.model.objects.screen.ErrorScreen"
			failonerror="true" fork="yes">
			<classpath refid="SolvisMax.classpath" />
		</java>
	</target>
	<target name="Main">
		<java classname="de.sgollmer.solvismax.Main" failonerror="true"
			fork="yes">
			<arg
				line="--solvis-id=mySolvis&#13;&#10;--solvis-url=http://192.168.1.40&#13;&#10;--solvis-account=SGollmer&#13;&#10;--solvis-password=e5am1kro" />
			<classpath refid="SolvisMax.classpath" />
		</java>
	</target>
	<target name="Ocr">
		<java
			classname="de.sgollmer.solvismax.imagepatternrecognition.ocr.Ocr"
			failonerror="true" fork="yes">
			<classpath refid="SolvisMax.classpath" />
		</java>
	</target>
	<target name="OcrRectangle">
		<java
			classname="de.sgollmer.solvismax.imagepatternrecognition.ocr.OcrRectangle"
			failonerror="true" fork="yes">
			<classpath refid="SolvisMax.classpath" />
		</java>
	</target>
	<target name="Pattern">
		<java
			classname="de.sgollmer.solvismax.imagepatternrecognition.pattern.Pattern"
			failonerror="true" fork="yes">
			<classpath refid="SolvisMax.classpath" />
		</java>
	</target>
	<target name="ScreenSaver">
		<java
			classname="de.sgollmer.solvismax.model.objects.screen.ScreenSaver"
			failonerror="true" fork="yes">
			<classpath refid="SolvisMax.classpath" />
		</java>
	</target>
	<target name="Solvis">
		<java classname="de.sgollmer.solvismax.model.Solvis"
			failonerror="true" fork="yes">
			<classpath refid="SolvisMax.classpath" />
		</java>
	</target>
	<target name="SolvisConnection">
		<java
			classname="de.sgollmer.solvismax.connection.SolvisConnection"
			failonerror="true" fork="yes">
			<classpath refid="SolvisMax.classpath" />
		</java>
	</target>
	<target depends="build" name="createjar">
		<jar destfile="${dist.dir}/temp/${dist.base}_woLib.jar"
			basedir="${bin.dir}" />
	</target>
	<target depends="createjar" name="Build for me">
		<jar jarfile="${dist.dir}/${dist.base}.jar">
			<zipfileset src="${dist.dir}/temp/${dist.base}_woLib.jar"
				excludes="META-INF/*" />
			<zipfileset src="lib/jlibmodbus-1.2.9.7.jar" />
			<!-- zipfileset src="lib/log4j-1.2-api-2.13.2.jar" /> <zipfileset src="lib/log4j-api-2.13.2.jar" 
				/> <zipfileset src="lib/log4j-core-2.13.2.jar" / -->
			<zipfileset src="lib/tinylog-api-2.1.2.jar" />
			<zipfileset src="lib/tinylog-impl-2.1.2.jar" />
			<zipfileset src="lib/mailapi-1.6.2.jar" />
			<zipfileset src="lib/smtp-1.6.2.jar" />
			<zipfileset src="lib/javax.activation-1.2.0.jar" />
			<manifest>
				<attribute name="Main-Class"
					value="de.sgollmer.solvismax.Main" />
			</manifest>
		</jar>
		<copy todir="${dist.dir}">
			<fileset dir="${bin.dir}" casesensitive="yes">
				<include name="base.xml" />
			</fileset>
		</copy>
		<copy todir="${dist.dir}">
			<fileset file="${fhem.pm}" casesensitive="yes" />
			<fileset file="${linux.systemd}" casesensitive="yes" />
			<fileset file="${linux.systemdD}" casesensitive="yes" />
			<fileset file="${myBase.xml}" casesensitive="yes" />
			<fileset file="${pubBaseDir}/base.xsd" casesensitive="yes" />
			<fileset file="${makefile}" casesensitive="yes" />
		</copy>
	</target>
	<target depends="Build for me" name="Build users">
		<copy todir="${pub.dir}">
			<fileset file="${dist.dir}/${dist.base}.jar"
				casesensitive="yes" />
			<fileset file="${fhem.pm}" casesensitive="yes" />
			<fileset file="${linux.systemd}" casesensitive="yes" />
			<fileset file="${linux.systemdD}" casesensitive="yes" />
			<fileset file="${pubBaseDir}/base.xsd" casesensitive="yes" />
			<fileset file="${makefile}" casesensitive="yes" />
			<fileset file="${pdf}" casesensitive="yes" />
			<fileset file="${changes}" casesensitive="yes" />
		</copy>
		<copy file="${pubBaseDir}/base.xml"
			tofile="${pub.dir}/base.xml.new" />
	</target>
</project>
